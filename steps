Input Plugins and Output Plugins
Various input plugins can be configured maually. See the github page thoroughlly for each plugin carefully to configure.
Output plugins. Default can be downloaded from the imfluxDB itself.

Create a new own configuration.

can go into the interactive mode of the influx running container (to upload the newly created configuration above into the influx db database)
docker exec -it CONTAINER_ID /bin/bash


Create a manual influx client config

influx config create --config-name client-config \
  --host-url http://localhost:8086 \
  --org db_project \
  --token pqcx-BmsRYF7h36WS13eQ9MhtLBP8krl6RiYUaQrKqSSNGAv3NqO6f1fB5g1hXNFLWP4zt64D47ILmlZ0TUuyA== \
  --active


Use the influx telegrafs create command to upload your custom Telegraf configuration to InfluxDB.

influx telegrafs create \
  -n "Example Telegraf config name"
  -d "This is a description for an example Telegraf configuration."
  -f /path/to/telegraf.conf


influx telegrafs create \
  -n "manual_config" \
  -d "First manual config with a docker container and output plugin included" \
  -f sys_conf.conf


 
To allow the user to get control of the docker sock to collect data from the deamon :)
sudo chmod 666 /var/run/docker.sock


[[inputs.disk]]
ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs", "tracefs"]


docker run -it --net=host --privileged=true -v /:/rootfs:ro -e "HOST_SYS=/rootfs/sys" -e "HOST_PROC=/rootfs/proc" -e "HOST_ETC=/rootfs/etc" <telegraf 1.2.1 image> sh



To update an existing configuration

influx telegrafs update \
  -i <telegraf-config-id> \
  -n <telegraf-config-name> \
  -d <telegraf-config-description> \
  -f /path/to/telegraf.conf

influx telegrafs update \
  -i 0944bb6fd7b9c000	\
  -n "manual_config_updated_nsfs" \
  -d "disk ignore tracefs nsfs added" \
  -f sys_conf.conf


docker run --net=container:influxdb telegraf
docker run --rm telegraf telegraf config > telegraf.conf
docker run -v $PWD/sys_conf.conf:/etc/telegraf/telegraf.conf:ro telegraf

Troubleshooting
On Linux, the list of disks is taken from the /proc/self/mounts file and a statfs call is made on the second column. If any expected filesystems are missing ensure that the telegraf user can read these files:

$ sudo -u telegraf cat /proc/self/mounts | grep sda2
/dev/sda2 /home ext4 rw,relatime,data=ordered 0 0
$ sudo -u telegraf stat /home
It may be desired to use POSIX ACLs to provide additional access:

sudo setfacl -R -m u:telegraf:X /var/lib/docker/volumes/

------------------------------------------------------------------

Loaded inputs: cpu disk diskio docker mem net processes swap system

------------------------------------------------------------------